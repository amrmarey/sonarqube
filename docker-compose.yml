version: '3.8'

services:
  sonarqube:
    image: sonarqube:community:latest  # Use the community edition of SonarQube
    container_name: sonarqube
    depends_on:
      - db  # Ensure PostgreSQL starts first
    environment:
      - SONAR_JDBC_URL=${SONAR_JDBC_URL}  # Use environment variable from .env
      - SONAR_JDBC_USERNAME=${SONAR_JDBC_USERNAME}
      - SONAR_JDBC_PASSWORD=${SONAR_JDBC_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data  # Persist SonarQube data
      - sonarqube_extensions:/opt/sonarqube/extensions  # Persist extensions
      - sonarqube_logs:/opt/sonarqube/logs  # Persist logs
    ports:
      - "${SONARQUBE_PORT}:9000"  # Use environment variable from .env
    networks:
      - sonarnet  # Connect to the dedicated network

  db:
    image: postgres:15  # Use the official PostgreSQL image
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}  # Use environment variable from .env
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresql_data:/var/lib/postgresql/data  # Persist PostgreSQL data
    networks:
      - sonarnet  # Connect to the dedicated network

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_data:

networks:
  sonarnet:
    driver: bridge  # Use a bridge network for container communication
